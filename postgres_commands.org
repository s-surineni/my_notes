* show databases
** \l
* list all rows in table
** select * from ooyala_test$com$user;
* show columns
** select * from table_name where false;
* to get columns of table
** \d  talend_lc$com$user;
* switch database
** \connect dbname
* show rown vertically
** \x
** called extended display mode
* update info in table
**
#+BEGIN_SRC sql
UPDATE link
SET last_update = DEFAULT
WHERE
   last_update IS NULL;
#+END_SRC

* show current database
** select current_database();
* searching for string contains
** select * from table where columns::text like '%text%';
* postgres connection string
** DATABASE_URL=postgres://{user}:{password}@{hostname}:{port}/{database-name}
* connecting to remote postgres instance
** psql --host=hostname --port=5432   --dbname=dbname --username=username
* see if table exists
** SELECT *
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'dbo'
AND TABLE_NAME = 'Certifications';
* delete all rows
#+BEGIN_SRC sql
delete from <table>
#+END_SRC
* login as a particular user
** sudo -u sampath -i
** psql postgres - in mac
* search for table names
#+BEGIN_SRC sql
select table_schema,
table_name
from information_schema.tables
where table_name like '%github_reps%'
and table_schema not in ('information_schema', 'pg_catalog')
and table_type = 'BASE TABLE'
order by table_name,
table_schema;
#+END_SRC
* get one row
** LIMIT 1
* use doubles quotes for columns
* all distinct values of a column in postgres
#+BEGIN_SRC sql
SELECT
DISTINCT column_1
FROM
table_name;
#+END_SRC
* delete table
#+begin_src sql
drop table <table_name>
#+end_src
