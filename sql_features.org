* distinct values
** Select distinct DEPARTMENT from Worker;
* order values by column
** Select * from Worker order by FIRST_NAME asc;
* order by multiple columns
** Select * from Worker order by FIRST_NAME asc,DEPARTMENT desc;
* filter values
** Select * from Worker where FIRST_NAME in ('Vipul','Satish');
* select values within ranges
** Select * from Worker where SALARY between 100000 and 500000;
** Select * from Worker where year(JOINING_DATE) = 2014 and month(JOINING_DATE) = 2;
* get count of rows
** SELECT COUNT(*) FROM worker WHERE DEPARTMENT = 'Admin';
* get number of employees in each department
** SELECT DEPARTMENT, count(WORKER_ID) No_Of_Workers FROM Worker GROUP BY DEPARTMENT ORDER BY No_Of_Workers DESC;
* Join two tables on a column, print workers who are managers
#+begin_src sql
SELECT DISTINCT W.FIRST_NAME, T.WORKER_TITLE FROM Worker W INNER JOIN Title T ON
 W.WORKER_ID = T.WORKER_REF_ID AND T.WORKER_TITLE in ('Manager');

#+end_src
#+begin_src sql
select first_name, worker_title from worker w inner join
 title t on worker_id = worker_ref_id where t.worker_title = 'Manager';
#+end_src
* Write a query to find those customers with their name and those salesmen with their name and city who lives in the same city.
#+begin_src sql
select c.cust_name, s.name, c.city from customer c inner join salesman s
 on c.salesman_id = s.salesman_id where c.city = s.city;

#+end_src
* Find all rows having same values across multiple columns
** SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*) FROM Title GROUP BY WORKER_TITLE, AFFECTED_FROM HAVING COUNT(*) > 1;
* Return n number of rows having largest values
#+begin_src sql
SELECT * FROM Worker ORDER BY Salary DESC LIMIT 10;
#+end_src
* get 5 th largest salary
#+begin_src sql
SELECT Salary FROM Worker ORDER BY Salary DESC LIMIT 4,1;
#+end_src
#+begin_src sql
SELECT TOP 1 salary FROM ( SELECT DISTINCT TOP N salary FROM #Employee ORDER BY salary DESC ) AS temp ORDER BY salary
#+end_src
#+begin_src sql
SELECT *
FROM Employee Emp1
WHERE (N-1) = (
               SELECT COUNT(DISTINCT(Emp2.Salary))
               FROM Employee Emp2
               WHERE Emp2.Salary > Emp1.Salary
               )
#+end_src
#+begin_src sql
SELECT TOP 1 salary
FROM (
      SELECT DISTINCT TOP n salary
      FROM employee
      ORDER BY salary DESC
      ) a
ORDER BY salary
#+end_src
* Get name and max salary of employee using subquery
#+begin_src sql
select FIRST_NAME from Worker where SALARY = (select MAX(SALARY) from Worker);
#+end_src
* Get name and second max salary using subquery
#+begin_src sql
select FIRST_NAME, SALARY from Worker where SALARY = (select max(SALARY) from Worker where SALARY <> (select max(SALARY) from Worker));
#+end_src
* get max salary of employee in every department
#+begin_src sql
SELECT DeptID, MAX(Salary)
 FROM EmpDetails
GROUP BY DeptID

select emp_name, job_name, dep_id, salary
 from employees where (dep_id, salary)
 in (select dep_id, max(salary) from employees group by dep_id);
#+end_src
* Aggregate functions
* get data from two tables with subquery, print workers who are managers
#+begin_src
select FIRST_NAME from Worker where WORKER_ID
in (select WORKER_REF_ID from Title where WORKER_TITLE = 'Manager');
select first_name, last_name from employee where id
 in (select employee_id from department_manager);
#+end_src
* correlated subquery
* LIMIT
** Limit returns specified number of rows from an offset
* inner join
#+begin_src sql
select title , name from film inner join language on film.language_id = language.language_id;
#+end_src
* right outer join
#+begin_src sql
select e.name, d.name from employee e right join department d on e.dept_id = d.dept_id;
#+end_src
* select departments which doesnt have employees
#+begin_src sql
select d.name from department d where not exists (select * from employee e where d.dept_id = e.dept_id);
select e.name, d.name from employee e right join department d on e.dept_id = d.dept_id where  e.name is NULL;
#+end_src
* cant combine distinct with other columns
